{"name":"Trajectory Outlier Detection","tagline":"An Open-Source Library","body":"### Overview\r\n\r\nThis is an open-source library to find outlier trajectories in a dataset. This library is based on the work of [Jae-Gil Lee](http://dm.kaist.ac.kr/jaegil/ ) and others.\r\n\r\n### What are trajectories?\r\n\r\nTrajectories are everywhere - pedestrians, vehicles, hurricanes, animals, and many other objects produce trajectories of position information that change over time. Trajectory mining seeks to identify patterns and interesting features in trajectory datasets. Trajectory mining techniques can be used to categorize paths of hurricanes, identify suspicious individuals in a park, or predict the destination of a car in a city.\r\n\r\n### Background and motivations\r\n\r\nThis is a library for trajectory outlier detection that uses the algorithm presented by \r\nJae-Gil Lee and others in their paper [Trajectory Outlier Detection: A Partition-and-Detect Framework][1] \\[1\\]. Outlier trajectories have paths that are not similar to other trajectories in the dataset.\r\n\r\nThis code is based heavily on the source code made available on Jae-Gil Lee's [webpage][2]. The code on on his website is a complete implementation of their algorithm, but like most research prototypes it includes little documentation and is unusable as a general-purpose library. Additionally, it was written with Microsoft Visual Studio - it uses Windows-specific visualization and proprietary Microsoft C++ structures. _Therefore, the goal of this project was to take that implementation and rewrite it as a cross-platform library_. \r\n\r\n### Trajectory Plotting\r\n\r\nThis graphic of the trajectories in a hurricane dataset is an example of the plotting functionality of the library. Plots are generated with Gnuplot, a generic cross-platform plotting library.\r\n\r\n![Plotting Trajectories](example2.png)\r\n\r\n### Outlier Plotting\r\n\r\nAfter finding outliers in the hurricane dataset we can plot outlier trajectories (red) and outlying parititions (thick).\r\n\r\n![Outlier Plotting](example.png)\r\n\r\n### Requirements\r\nGnuplot\r\n\r\n### Interface\r\n\r\n### Full API Documentation\r\n\r\nSee API documentation [here](./html/index.html).\r\n\r\n[1]: http://dm.kaist.ac.kr/jaegil/papers/icde08.pdf \"Trajectory Outlier Detection Paper\"\r\n[2]: http://dm.kaist.ac.kr/jaegil/ \"Source Code\"\r\n<sub>\\[1\\] Jae-Gil Lee, Jiawei Han, and Xiaolei Li. 2008. Trajectory Outlier Detection: \r\nA Partition-and-Detect Framework. In Proceedings of the 2008 IEEE 24th International \r\nConference on Data Engineering (ICDE '08). IEEE Computer Society, Washington, DC, USA, 140-149.</sub>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}